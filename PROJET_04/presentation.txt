La présentation d'aujourd'hui porte sur la rédaction d'un cahier des charges pour la création d'un site WEB pour l'entreprise OC Pizza.

Dans ce projet, il fallait définir les acteurs, determiner les spécifications fonctionnelles et proposer une solution techinque.
---


Je vais donc commencer cette présentation par une modélisation générale. Cette modélisation met en avant le système dans son ensemble et les principaux acteurs, le contexte et les cas d'utilisation de la partie client, de la partie pizzaiolo et de la partie livreur.

Ensuite, j'ai fait le choix de centrer cette présentation sur les modules importants du projet. Nous n'avions pas le temps nécessaire pour développer tout le projet ici.

J'ai concentré mon travail sur le module d'authentification, le module de gestion de commande dans son intégralité et le cycle de vie d'une commande présentant tout le processus d'une commande et tous les acteurs présents tout au long de la commande.

Je finirai cette présentation en vous porposant une solution technique adaptée aux choix de conception du projet.
---


Le diagramme de contexte montre une vision succinte du systeme et des acteurs qui vont utiliser ce systeme

Nous avons a gauche Les acteurs primaires: le client, le pizzaiolo, le directeur et le livreur. Je ne m'attarderai pas sur les fonctionnalités du directeur dans cse projet puisque qu'il n'intervient pas directement dans le processus de commande. 

A droite, nous avons les acteurs secondaires : les bases de données clients et produits et le serveur bancaire.
---


Le diagramme de package nous donne une vue globale des modules dont auront besoin chaque acteur. 
Pour la partie client, le système communique avec une base de données client et le serveur bancaire

Pour la partie Pizzeria, le systeme va communiquer avec la base de données produits.
---


J'ai pu voir grâce aux cours qu'il existait plusieurs diagrammes. Je n'ai pas pu tous les utiliser dans ce projet cra certains ne me semblaient pas utiles et d'autres un peu trop techniques pour ce projet.
Nous avons donc décidé avec mon mentor de n'utiliser que 3 types de diagrammes qui nous suivront tout le long de cette présentation, a savoir, le diagramme de ca d'utiisation, le diagramme de séquence et le diagramme d'activité.
___



Ici, nous avons la partie client, Il est IMPORTANT de noter que le module en rouge, qui correspond a une commande en attente de préparation, signifie que cette action n'est pas exécutée par l'utilisateur, cependant, il peut executer 2 actions tant que cette action est active, a savoir, tant que la commande n'est pas préparée, il peut la modifier ou l'annuler.
---


Nous avons ici, les actions effectuées par le pizzaiolo et le livreur
---


Nous entrons dans les actions de manière détaillée. Ici, je commence par le système d'authentification,  le client doit s'authentifier pour pouvoir commander, il entre ses informations, s'il existe dans la base de données, il peut commander directement, si ce n'est pas le cas, il doit créer un compte.
Il n'a pas été fait mention de ce systeme d'authentification dans l'énoncé mais il m'a semblé judicieux de le precider tout de meme.



Le diagramme de séquence, présente l'interaction entre le systeme et la base de données pour la vérification du compte client. Le client saisis ses informations, le systeme interroge la base de données, s'il existe, le systeme ouvre la session client, dans le cas contraire, il affiche un message d'erreur indiaqunt que les informations sont inexistantes.




Le diagramme d'activité permet de visualiser l'enchainement en cas de données invalides.




Le diagramme de séquence de creation de compte présente, de la meme manière, l'interaction entre le systeme et la base de données, le client doit remplir un formulaire, le systeme verifie dans la base de données si les données sont existentes, si non, il créé le compte, si oui, il envoie un message indiquant que les données ne respectent pas les contraintes pour la création du compte.

De la même manière que le précédent, le diagramme d'activité montre le cheminement en cas de réussite ou d'echec de la saisie des informations.
---


Dans ce diagramme de cas d'utilisation, j'ai détaillé le processus de passage de commandedu point e vue client et du point de vue pizzaiolo

une fois loggué, Le client choisit sa ou ses pizzas puis valide sa commande, il choisit son mode de règlement, s'il choisit de régler en ligne, le serveur bancaire est sollicité, sinon, le client paiera le livreur, Puis il choisit son mode livraison, s'il choisit la livraison a domicile, il devra renseigner une adresse postale.

Le diagramme de séquence présente tout le processus ainsi que l'interaction entre le systeme et le serveur bancaire. Le serveur bancaire peut envoyer 2 réponses, le règlement à été effectué, le systeme informe le client, la commande est enregistrée et le processus se poursuit. 
Le règlement à été refusé, le système affiche un message d'erreur.

Le diagramme d'activité montre les choix et leurs conséquences. Ici, le client choisit le règlement à la livraison, le processus se poursuit automatiquement, dans la cas contraire, il y a d'abord l'appel au serveur bancaire, puis dans le cas ou le paiement a ete refusé, le systeme revient sur le choix du mode règlement, le client à donc la possibilité de changer de carte bleue ou de regler à la livraison.
---


Voici le diagramme de cas d'utilisation du pizaiolo, ses actions consistent a receptonner les commandes, les préparer et mettre à jour le statut de la commande une fois terminée pour qu'elle puissent être livrées.
Il nous a été demandé de prevoir un aide-mémoire des recettes qu'il pourra consulter si besoin.
Et il devra mettre le stock produits a jour après chaque commandes terminées.

Le diagramme de séquence met en scène tout ce processus ainsi que la communication entre le systemme et la base de données produits pour la mise a jour du stock.

Le diagramme d'activité présente simplement ce processus ainsi que le fait que l'aide-mémoire n'est consulté qu'au besoin, si le pizzaiolo connait la recette par coeur, il n'en aura pas besoin.
___


Ce diagramme montre le cas d'utilissation du livreur. Ses actions seront de receptionner les commandes à livrer, mettre a jour le statut du reèglement (si reglemement à la livraison et mettre a jour le statut de la commande une fois livrée. Il sera possible d'afficher l'itinéraire d'une adresse postale s'il ne la connait pas.

Le digramme de séquence détaille ce processus ainsi que l'interaction entre le systeme et l'API Google Maps 

Comme vous pouvez le voir sur le diagramme d'activité, consulter l'itinéraire n'est pas une obligation puisqu'il est possible que le livreur connaisse l'adresse, de plus, la mise à jour du statut du règlement se fera uniquement si le mode de règlement à été choisis à livraison.
___


Le cycle de vie d'une commande reprend les 3 derniers diagrammes d'activité et offre une vue globale de tout le processus de la commande.
Nous pouvons donc savoir a quel moment un acteur intervient sur la commande. Par exemple, ici, le client commande sa pizza, la règle, la commande est enregistrée et c'est au tour du pizzaiolo de prendre le relai, il prepare la commande et l'envoie à la livraison, et c'est au tour du livreur de prendre la commande en chatge.
notons qu'il n'est pas utile au pizzaiolo d'attendre de mettre le statut de la commande a jour ou celui de la base de données produits pour envoyer la commande en livraion, le livreur prend connaissance de l'itinérairre de livraison, livre la commande modifie le statut de règlement si besoin et celui de la livraison une fois livrée.
___

La partie technique du projet fût particulièrement délicate puisqu’il m’a fallu porter des choix sur des produits dont je ne connaissais pas le fonctionnement.

Mon mentor m’a poussé à faire ces recherches de façon à vous présenter un projet dont j’étais le seul rédacteur.
Il m’a tout de même orienté afin d’optimiser mes recherches et ne pas me perdre dans des lectures qui n’auraient pas servis ce document.


La solution technique proposée ici est la suivante, La partie client sera une application WEB, pour des raisons pratiques et de rapidité d'execution, le pizzaiolo sera doté d'une tablette de type iPad, le livreur lui, sera doté d'un smartphone de type iPhone pour pouvoir utiliser convenablement le GPS. Ces 2 périphériques seront donc doté du systeme d'exploitation iOS dan lequel, l'application, developpée en SWIFT, sera installée nativement, tous seront, reliés au serveur web de l'application.

Nous allons développer l'application WEB avec Python3.8 et son framework Django 3.0.
Nous avons choisis REACT pour la partie interface utilisateur. Ses composants réutilisables nous permettrons une certaine aisance et une certaine rapidité d'execution dans la programmation.

L'API maps retenue pour le livreur sera GOOGLE MAPS, c'est l'un des plus complets et des plus utilisés au monde. il est intuitif pour l'utlisateur et s'intègrera parfaitement dans le systeme choisis.

Les base de données seront gérées avec POSTGRESQL. Sa stabilité et sa faible consommation en resources en font un choix des plus judicieux, de plus, il est très bien adapté à Python.

Le serveur WEB, quant à lui, sera administré avec NGINX, pour les mêmes raison que POSTGRESQL, NGINX est optimisé pour les cas de faibles charges et son systeme de configuration sans redémarrage peut faire gagner un temps précieux sans avoir à bloquer le site.

Je finirai en ajoutant que l'application web pourra être utilisée aussi bien sur ordinateur que sur tablette ou smartphone et que, de ce fait, elle se voudra responsive. Pour une meilleure ergonomie coté client, Il serait bon de prévoir une application mobile si la demande croit.



preciser qu'on a choisit 3 modeles de digramme
pas de diagramme de classe, trop technique

faire des pauses et des transitions entre chaque chapitre

préciser que le serveur communique ar des api

